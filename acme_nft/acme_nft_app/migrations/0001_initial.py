# Generated by Django 4.1.2 on 2022-11-14 10:38

import acme_nft_app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_code', models.CharField(max_length=60)),
                ('payment_method', models.CharField(choices=[(acme_nft_app.models.PaymentMethod['cash_on_delivery'], 'CASH_ON_DELIVERY'), (acme_nft_app.models.PaymentMethod['card'], 'CARD')], max_length=60)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('address', models.CharField(max_length=256)),
                ('status', models.CharField(choices=[(acme_nft_app.models.Status['received'], 'RECEIVED'), (acme_nft_app.models.Status['sent'], 'SENT'), (acme_nft_app.models.Status['on_transit'], 'ON_TRANSIT'), (acme_nft_app.models.Status['delivered'], 'DELIVERED')], max_length=60)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('collection', models.TextField()),
                ('price', models.FloatField()),
                ('stock', models.IntegerField()),
                ('image_url', models.CharField(blank=True, max_length=255)),
                ('offer_price', models.FloatField(blank=True, null=True)),
                ('rarity', models.CharField(choices=[('COMMON', 'COMMON'), ('RARE', 'RARE'), ('EPIC', 'EPIC'), ('LEGENDARY', 'LEGENDARY'), ('MYTHIC', 'MYTHIC')], default='COMMON', max_length=60)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='acme_nft_app.author')),
            ],
        ),
        migrations.CreateModel(
            name='ProductEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(null=True)),
                ('entry_type', models.CharField(choices=[(acme_nft_app.models.EntryType['cart'], 'CART'), (acme_nft_app.models.EntryType['order'], 'ORDER'), (acme_nft_app.models.EntryType['wishlist'], 'WISHLIST')], max_length=60)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='acme_nft_app.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='acme_nft_app.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Opinion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=2000)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='acme_nft_app.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60)),
                ('description', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_name', models.CharField(max_length=60)),
                ('number', models.IntegerField()),
                ('block', models.IntegerField(null=True)),
                ('floor', models.IntegerField(null=True)),
                ('door', models.CharField(blank=True, max_length=1)),
                ('city', models.CharField(max_length=60)),
                ('code_postal', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
